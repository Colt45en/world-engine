version: '3.8'

services:
  # Nexus Bridge (Python FastAPI Backend)
  nexus-bridge:
    build:
      context: ./src/bridge
      dockerfile: ../../docker/bridge/Dockerfile
    container_name: nexus-bridge
    ports:
      - "8888:8888"
    environment:
      - PYTHONPATH=/app
      - NEXUS_ENV=docker
      - MAX_MEMORY_MB=512
      - MAX_TRAINING_POINTS=1000
    volumes:
      - bridge_logs:/app/logs
      - bridge_data:/app/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8888/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - nexus-network
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.1'

  # Nexus Frontend (React + TypeScript)
  nexus-frontend:
    build:
      context: .
      dockerfile: docker/frontend/Dockerfile
    container_name: nexus-frontend
    ports:
      - "3000:80"
    environment:
      - REACT_APP_API_URL=http://localhost:8888
      - REACT_APP_WS_URL=ws://localhost:8888
      - NODE_ENV=production
    depends_on:
      nexus-bridge:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - nexus-network
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.25'

  # Redis for caching and session management (optional)
  redis:
    image: redis:7-alpine
    container_name: nexus-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - nexus-network
    deploy:
      resources:
        limits:
          memory: 128M
          cpus: '0.1'
    command: redis-server --appendonly yes --maxmemory 100mb --maxmemory-policy allkeys-lru

  # PostgreSQL for persistent data storage (optional)
  postgres:
    image: postgres:15-alpine
    container_name: nexus-postgres
    environment:
      POSTGRES_DB: nexus
      POSTGRES_USER: nexus
      POSTGRES_PASSWORD: nexus_secure_password_change_me
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    restart: unless-stopped
    networks:
      - nexus-network
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.25'

  # Prometheus for monitoring (optional)
  prometheus:
    image: prom/prometheus:latest
    container_name: nexus-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./docker/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    restart: unless-stopped
    networks:
      - nexus-network
    profiles:
      - monitoring

  # Grafana for dashboards (optional)
  grafana:
    image: grafana/grafana:latest
    container_name: nexus-grafana
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
      - ./docker/grafana/provisioning:/etc/grafana/provisioning
    restart: unless-stopped
    networks:
      - nexus-network
    profiles:
      - monitoring

networks:
  nexus-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

volumes:
  bridge_logs:
    driver: local
  bridge_data:
    driver: local
  redis_data:
    driver: local
  postgres_data:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local
